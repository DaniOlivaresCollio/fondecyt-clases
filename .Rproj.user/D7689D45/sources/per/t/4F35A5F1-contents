# Procesamiento Data Conclat Argentina

## Preparación

```{r,echo=FALSE,warning=FALSE,message=FALSE}
rm(list=ls())
options(scipen = 999)

library(pacman)
p_load(
  # generacion docs 
  flextable,         # tablas personalizadas para word
  kableExtra,        # mejorar tablas
  knitr,             # generar reportes reproducibles
  officer,           # crear/modifcar documentos word o ppt
  tinytex,           # instalación mínima de LaTeX para generar PDF
  
  # importacion datos 
  haven,             # impotar/exportar datos spss, stata, sas con etiquetas
  readr,             # lectura rápida de csv
  readxl,            # leer excel 
  
  # manipulacion 
  forcats,           # manipulación de factores
  labelled,          # trabajar con variables etiquetadas
  purrr,             # programación funcional para listas y data frames
  sjlabelled,        # manejar etiquetas 
  stringr,           # manipular texto
  sjmisc,            # limpieza y descripción de datos
  
  # visualización
  ggplot2,           # visualización basado en gramática de gráficos
  ggrepel,           # etiquetas en gráficos sin superposición
  gridExtra,         # combinar gráficos en uno solo
  sjPlot,            # visualizar resultados estadísticos
  
  # análisis
  psych,             # análisis general, psicométrico
  survey,            # diseño survey encuestas complejas
  srvyr,             # diseño survey con tidy
  tidyverse,
  
  # conexion web
  curl,              # conexiones http de bajo nivel: para solucionar el problema de la api del ine
  httr               # cliente http para API
  )
```

### Cargar datos

```{r datos,message=FALSE,warning=FALSE}
data_arg <- read_dta("input/data/Base edit 13.8 con a27.dta")
data_arg_raw <- data_arg

data_arg <- data_arg %>%
  rename(
    sexo = e01_sexo,
    edad = e02_edad
  )
```

## Procesamiento

### relation_mop

```{r}
frq(data_arg$a07)

# Situación empleo
data_arg <- data_arg %>%
  mutate(
    a07 = factor(
      as.numeric(a07),
      levels = 1:7,
      labels = c(
        "1. Patrón(a) o empleador(a)",
        "2. Trabajador(a) por cuenta propia",
        "3. Empleado(a) u obrero(a) del sector público",
        "4. Empleado(a) u obrero(a) del sector privado",
        "5. Servicio doméstico fijo o por horas",
        "6. FF.AA. y de seguridad",
        "7. Para el negocio, empresa, actividad de un familiar"
      )
    )
  ) %>%
  set_variable_labels(a07 = "Employment situation (a07)")

frq(data_arg$a07)

data_arg <- data_arg %>%
  mutate(
    relation_mop = case_when(
      as_numeric(a07) == 1 ~ 1,
      as_numeric(a07) == 2 ~ 2,
      as_numeric(a07) >= 3 ~ 3,
      TRUE ~ NA_real_
      ),
    relation_mop = factor(
      relation_mop,
      levels = 1:3,
      labels = c(
        "1. Employers",
        "2. Self-Employed",
        "3. Salaried"
      )
    )
  ) %>%
  set_variable_labels(relation_mop = "Relation with Means of Production")

frq(data_arg$relation_mop)
```

### company_size

```{r}
frq(data_arg$a26)

data_arg <- data_arg %>%
  mutate(
    company_size = case_when(
      a26 %in% c(1) ~ 1,
      a26 %in% c(2, 3) ~ 2,
      a26 %in% c(4, 5) ~ 3,
      a26 %in% c(6, 7) ~ 4,
      a26 %in% c(8, 9) ~ 5,
      TRUE ~ NA_real_
    ),
    company_size = factor(
      company_size, 
      levels = 1:5, 
      labels = c(
        "Solo",
        "2-9",
        "10-49",
        "50-199",
        "200 or more"),
      ordered = TRUE
    )
  ) %>%
  set_variable_labels(company_size = "Company Size")

frq(data_arg$company_size)
```

### workplace_size 

```{r}
frq(data_arg$a27)

data_arg <- data_arg %>%
  mutate(
    workplace_size = case_when(
      a27 %in% c(1) ~ 1,
      a27 %in% c(2, 3) ~ 2,
      a27 %in% c(4, 5) ~ 3,
      a27 %in% c(6, 7) ~ 4,
      a27 %in% c(8, 9) ~ 5,
      TRUE ~ NA_real_
    ),
    workplace_size = factor(
      workplace_size,
      levels = 1:5,
      labels = c(
        "Solo",
        "2-9",
        "10-49",
        "50-199",
        "200 or more"),
      ordered = TRUE
    )
  ) %>%
  set_variable_labels(workplace_size = "Workplace Size")

frq(data_arg$workplace_size)
```

### owners

-   1 == employers o self employed sin empleados
-   2 == employers o self employed con 2-9 empleados
-   3 == employers o self employed com \>= 10 empleados

```{r}
table(data_arg$relation_mop,data_arg$company_size)
table(data_arg$relation_mop,data_arg$workplace_size)

data_arg <- data_arg %>%
  mutate(
    owners = case_when(
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 2 | (is.na(company_size) & as.numeric(workplace_size) == 2)) ~ 2,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 3 | (is.na(company_size) & as.numeric(workplace_size) >= 3)) ~ 3,
      TRUE ~ NA_real_
    ),
    owners = factor(
      owners,
      levels = 1:3,
      labels = c(
        "1. Solo Self-Employed",
        "2. Small employers",
        "3. Employers"
      )
    )
  ) %>%
  set_variable_labels(owners = "Owners")

frq(data_arg$owners)
```

### owners2

-   1 == employers o self employed sin empleados
-   2 == employers o self employed con 2-49 empleados
-   3 == employers o self employed com \>= 50 empleados

```{r}
data_arg <- data_arg %>%
  mutate(
    owners2 = case_when(
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) %in% 2:3 | (is.na(company_size) & as.numeric(workplace_size) %in% 2:3)) ~ 2,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 4 | (is.na(company_size) & as.numeric(workplace_size) >= 4)) ~ 3,
      TRUE ~ NA_real_
    ),
    owners2 = factor(
      owners2,
      levels = 1:3,
      labels = c(
        "1. Solo Self-Employed",
        "2. Small employers",
        "3. Capitalists"
      )
    )
  ) %>%
  set_variable_labels(owners2 = "Owners 2")

frq(data_arg$owners2)
```

### educ

```{r}
frq(data_arg$e05)

data_arg <- data_arg %>%
  mutate(
    educ = ifelse(e05 %in% c(-999, -888), NA, e05)
  ) %>%
  set_variable_labels(educ = "Educational level")

frq(data_arg$educ)
```

### glosa_ciuo08

```{r}
# Preparar variables necesarias

## Crear la glosa concatenada
data_arg$glosa_ciuo08 <- paste(data_arg$a02, data_arg$a03, sep = " ")
```
 
### ciuo08_ine

```{r}
# Chequeo COMPLETO de códigos ciuo08 con api INE

## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict", 
                       encode = "json",
                       body =  list(text = data_arg$glosa_ciuo08,
                                    classification = "ciuo",
                                    digits = 2))

## Extraer el contenido
ciuo08_ine <- httr::content(request)

## Agregar como nueva columna a la base original
data_arg$ciuo08_ine <- unlist(ciuo08_ine$cod_final)

data_arg <- data_arg %>% 
  set_variable_labels(
    ciuo08_ine = "ISCO-08 (Coded with INE's API)"
  )

frq(data_arg$ciuo08_ine)
```

### skills

- Experts: ciuo08 == 11 a 34 con universitaria completa o más (educ \>= 9) ---\> experts
- Experts: ciuo08 == 11 a 34 sin información educ (educ == NA)

- Skilled: ciuo08 == 11 a 34 con universitaria incompleta o menos (educ \< 9)
- Skilled: ciuo08 == 35, 36, 41:44, 53
- Skilled: ciuo08 == 51, 54, 61, 62, 71:75, 81 con media completa o más (educ \>= 5)
- Skilled: ciuo08 == 61, 62, 71:75 sin información educ (educ == NA)

- Unskilled: ciuo08 == 51, 54, 61, 62, 71:75, 81 con media incompleta o menos, y
- Unskilled: ciuo08 == 52, 63, 82, 83, 90+
- Unskilled: ciuo08 == 51, 54, 81 sin información educ (educ == NA)

```{r}
data_arg <- data_arg %>% 
  mutate(
    skills = case_when(
      ciuo08_ine <= 34 & educ >= 9 ~ 1,
      ciuo08_ine <= 34 & is.na(educ)~ 1,  
      
      ciuo08_ine <= 34 & educ < 9 ~ 2,
      ciuo08_ine %in% c(35, 36, 41:44, 53) ~ 2,
      ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ >= 5 ~ 2,
      ciuo08_ine %in% c(61, 62, 71:75) & is.na(educ) ~ 2,
      
      ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ <= 4 ~ 3,
      ciuo08_ine %in% c(52, 63, 82, 83, 91:99) ~ 3,
      ciuo08_ine %in% c(51, 54, 81) & is.na(educ) ~ 3     
    ),
    skills = factor(
      skills, 
      levels = 1:3,
      labels = c(
        "1. Experts",
        "2. Skilled",
        "3. Unskilled"
      )
    )
  ) %>%
  set_variable_labels(skills = "Skills")

frq(data_arg$skills)
```

### formal_position_auth

```{r}
frq(data_arg$a15)

data_arg <- data_arg %>%
  mutate(
    formal_position_auth = case_when(
      as.numeric(relation_mop) %in% c(1, 2) ~ NA_real_,
      TRUE ~ as.numeric(a15)
    ),
    formal_position_auth = factor(
      formal_position_auth,
      levels = 1:4,
      labels = c(
        "1. Senior manager or executive",
        "2. Middle manager (e.g., sector, office or branch head)",
        "3. Supervisor or foreperson",
        "4. Regular employee or worker (no supervisory role)"
      )
    )
  ) %>%
  set_variable_labels(formal_position_auth = "Formal position of authority (a15)")

frq(data_arg$formal_position_auth)
```

### supervision

```{r}
frq(data_arg$a16)

data_arg <- data_arg %>%
  mutate(
    supervision = case_when(
      as.numeric(relation_mop) %in% 1:2 ~ NA,
      a16 == 1 ~ 1,
      a16 %in% c(2, -888, -999) ~ 0,
      TRUE ~ NA_real_
    )
  ) %>%
  set_variable_labels(supervision = "Supervises other workers (a16)")

frq(data_arg$supervision)
```

### decisionmaking_typology

```{r}
frq(data_arg$a17_01)
frq(data_arg$a17_02)
frq(data_arg$a17_03)
frq(data_arg$a17_04)
frq(data_arg$a17_05)
frq(data_arg$a17_06)

# Función de recodificación
recode_dm <- function(x) case_when(
  x == 1 ~ 3,
  x == 2 ~ 2,
  x %in% 3:888 ~ 1,
  TRUE ~ NA_real_
)

data_arg <- data_arg %>%
  mutate(
    across(a17_01:a17_06, recode_dm, .names = "rec_{.col}"),                    # Crear versiones recodificadas temporales
    decisionmaking_typology = if_else(                                          # Suma y promedio, NA solo si todas son NA
      if_all(starts_with("rec_"), is.na),
      NA_real_,
      rowSums(across(starts_with("rec_")), na.rm = TRUE)
    ),
    decisionmaking_typology_mean = if_else(
      if_all(starts_with("rec_"), is.na),
      NA_real_,
      rowMeans(across(starts_with("rec_")), na.rm = TRUE)
    )
  ) %>%
  set_variable_labels(
    decisionmaking_typology = "Decision-making typology (sum, inverted)",
    decisionmaking_typology_mean = "Decision-making typology (mean, inverted)"
  ) %>%
  select(-starts_with("rec_"))

frq(data_arg$decisionmaking_typology)
frq(data_arg$decisionmaking_typology_mean)

# Crear variable con 3 categorías
data_arg <- data_arg %>%
  mutate(
    decisionmaking_typology_cat = case_when(
    decisionmaking_typology_mean == 1 ~ 1,
    decisionmaking_typology_mean > 1 & decisionmaking_typology_mean < 3 ~ 2,
    decisionmaking_typology_mean == 3 ~ 3
    )
  ) %>%
  set_variable_labels(
    decisionmaking_typology_cat = "Decision-making typology (recoded 3 categories)"
  )

frq(data_arg$decisionmaking_typology_cat)
```

### managerial_location_typology

```{r}
data_arg <- data_arg %>%
  mutate(
    managerial_location_typology = case_when(
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 1,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 2,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 3,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 4,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 5,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 6,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 7,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 8,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 9,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 10,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 11,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 12
    ),
    managerial_location_typology = factor(
      managerial_location_typology,
      levels = 1:12,
      labels = c(
        "1. Manager on all criteria",
        "2. Manager not in formal hierarchy",
        "3. Non-supervisory manager",
        "4. Non-supervisory decision-maker not in formal hierarchy",
        "5. Advisor-manager on all criteria",
        "6. Advisor not in hierarchy",
        "7. Non-supervisory advisor",
        "8. Non-supervisory advisor not in formal hierarchy",
        "9. Sanctioning / task supervisor in hierarchy",
        "10. Sanctioning / task supervisor not in hierarchy",
        "11. Not subordinates but in hierarchy",
        "12. Non-supervisor / non manager on all criteria"
      )
    ),
    organization_assets = case_when(
      as.integer(managerial_location_typology) %in% c(1, 2, 3, 5) ~ 1,
      as.integer(managerial_location_typology) %in% c(6, 7, 9, 10) ~ 2,
      as.integer(managerial_location_typology) %in% c(4, 8, 11, 12) ~ 3
    ),
    organization_assets = factor(
      organization_assets,
      levels = 1:3,
      labels = c(
        "1. Manager",
        "2. Supervisor",
        "3. Non-managerial worker"
      )
    )
  ) %>%
  set_variable_labels(
    managerial_location_typology = "Managerial Location Typology",
    organization_assets = "Organizational Assets"
  )

frq(data_arg$managerial_location_typology)
frq(data_arg$organization_assets)
```

### a06_boleta

```{r}
# frq(data_arg$a06)
# 
# data_arg <- data_arg %>% 
#   mutate(
#     a06_boleta = case_when(
#       a06 %in% c(1, 2) ~ 1,
#       a06 %in% c(3, -888, -999) ~ 0
#     )) %>% 
#     set_variable_labels(a06_boleta = "Entrega boleta (1 = yes)") %>% 
#   set_value_labels(a06_boleta = c(
#     "Yes" = 1,
#     "No" = 0
#   ))
# 
# frq(data_arg$a06_boleta)
```

### inicio_actividades

```{r}
# frq(data_arg$a10)
# table(data_arg$a10, data_arg$relation_mop)
# table(data_arg$a10, data_arg$owners)
# table(data_arg$a10, data_arg$owners2)
```

### a18_contrato + servicio domèstico

```{r}
frq(data_arg$a18)

data_arg <- data_arg %>% 
  mutate(
    a18_contrato = case_when(
      a18 == 1 ~ 1, 
      a18 %in% c(2, 3, 4, 5) ~ 0,
      as.numeric(a07) == 5 ~ 0
    )
  ) %>% 
  set_variable_labels(a18_contrato = "Has a formal job (1 = yes)") %>% 
  set_value_labels(a18_contrato = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data_arg$a18_contrato)
```

## Classes

![](img/wright_classes.jpeg)

### wrightclass1_original

**employers: employers con 10 o más trabajadores**

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass1_original = case_when(
      as.integer(owners) == 3 ~ 1,  # 1. Employers
      as.integer(owners) == 2 ~ 2,  # 2. Small employers
      as.integer(owners) == 1 ~ 3,  # 3. Petty bourgeoisie
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 4,  # 4. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 5,  # 5. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 6,  # 6. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 7,  # 7. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 8,  # 8. Skilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 2 ~ 9,  # 9. Skilled workers
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 3 ~ 12  # 12. Nonskilled workers
    ),
    wrightclass1_original = factor(
      wrightclass1_original,
      levels = 1:12,
      labels = c(
        "1. Employers",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Expert managers",
        "5. Expert supervisors",
        "6. Experts",
        "7. Skilled managers",
        "8. Skilled supervisors",
        "9. Skilled workers",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Nonskilled workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_original = "Wright Class Typology")

frq(data_arg$wrightclass1_original)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq <- data_arg_svy %>%
#   group_by(wrightclass1_original) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq %>%
#   print(n = Inf)
```

### wrightclass2_capitalists

**capitalists: employers 50 o más trabajadores**

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass2_capitalists = case_when(
      as.integer(owners2) == 3 ~ 1,  # 1. Capitalists
      as.integer(owners2) == 2 ~ 2,  # 2. Small employers
      as.integer(owners2) == 1 ~ 3,  # 3. Petty bourgeoisie
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 4,  # 4. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 5,  # 5. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 6,  # 6. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 7,  # 7. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 8,  # 8. Skilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 2 ~ 9,  # 9. Skilled workers
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 3 ~ 12  # 12. Nonskilled workers
    ),
    wrightclass2_capitalists = factor(
      wrightclass2_capitalists,
      levels = 1:12,
      labels = c(
        "1. Capitalists",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Expert managers",
        "5. Expert supervisors",
        "6. Experts",
        "7. Skilled managers",
        "8. Skilled supervisors",
        "9. Skilled workers",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Nonskilled workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_capitalists = "Wright Class Typology (2)")

frq(data_arg$wrightclass2_capitalists)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_2 <- data_arg_svy %>%
#   group_by(wrightclass2_capitalists) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_2 %>%
#   print(n = Inf)
```

### wrightclass1_informal

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass1_informal = case_when(
      as.integer(owners) == 3 ~ 1,  # 1. Employers
      as.integer(owners) == 2 ~ 2,  # 2. Small employers
      
      as.integer(owners) == 1 & educ >= 9 ~ 3,   # 3. Petty bourgeoisie
      as.integer(owners) == 1 & educ <= 8 ~ 4,   # 4. Informal self-employed
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 5,  # 5. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 6,  # 6. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 7,  # 7. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 8,  # 8. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 9,  # 9. skilled supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 12, # 12. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 13  # 13. Informal workers
    ),
    wrightclass1_informal = factor(
      wrightclass1_informal,
      levels = 1:13,
      labels = c(
        "1. Employers",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Informal self-employed",
        "5. Expert managers",
        "6. Expert supervisors",
        "7. Experts",
        "8. Skilled managers",
        "9. Skilled supervisors",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Formal workers",
        "13. Informal workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_informal = "Wright Class Typology + Informal (3)")

frq(data_arg$wrightclass1_informal)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_3 <- data_arg_svy %>%
#   group_by(wrightclass1_informal) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_3 %>%
#   print(n = Inf)
```

### wrightclass2_informal

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass2_informal = case_when(
      as.integer(owners2) == 3 ~ 1,  # 1. Capitalists
      as.integer(owners2) == 2 ~ 2,  # 2. Small employers
      
      as.integer(owners2) == 1 & educ >= 9 ~ 3,   # 3. Petty bourgeoisie
      as.integer(owners2) == 1 & educ <= 8 ~ 4,   # 4. Informal self-employed
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 5,  # 5. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 6,  # 6. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 7,  # 7. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 8,  # 8. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 9,  # 9. skilled supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 12, # 12. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 13  # 13. Informal workers
    ),
    wrightclass2_informal = factor(
      wrightclass2_informal,
      levels = 1:13,
      labels = c(
        "1. Capitalists",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Informal self-employed",
        "5. Expert managers",
        "6. Expert supervisors",
        "7. Experts",
        "8. Skilled managers",
        "9. Skilled supervisors",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Formal workers",
        "13. Informal workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_informal = "Wright Class Typology + Informal (4)")

frq(data_arg$wrightclass2_informal)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_4 <- data_arg_svy %>%
#   group_by(wrightclass2_informal) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_4 %>%
#   print(n = Inf)
```

### wrightclass1_reduced

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass1_reduced = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 1,  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 2,  # 2. Informal workers
      as.integer(owners) == 1 & educ <= 8 ~ 3,                                                         # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                              # 4. Experts
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                   # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                   # 6. Managers
      as.integer(owners) == 1 & educ >= 9 ~ 7,                                                         # 7. Petty bourgeoisie
      as.integer(owners) == 2 ~ 8,                                                                     # 8. Small employers
      as.integer(owners) == 3 ~ 9                                                                      # 9. Employers
    ),
    wrightclass1_reduced = factor(
      wrightclass1_reduced,
      levels = 1:9,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",       
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Small employers",
        "9. Employers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_reduced = "Wright Class Typology  Reduced (5)")

frq(data_arg$wrightclass1_reduced)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_5 <- data_arg_svy %>%
#   group_by(wrightclass1_reduced) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_5 %>%
#   print(n = Inf)
```

### wrightclass2_reduced

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass2_reduced = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18 == 1 ~ 1,                  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18 %in% c(2, 3, 4, -999) ~ 2, # 2. Informal workers
      as.integer(owners2) == 1 & educ <= 8 ~ 3,                                                               # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                                     # 4. Experts      
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                          # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                          # 6. Managers
      as.integer(owners2) == 1 & educ >= 9 ~ 7,                                                               # 7. Petty bourgeoisie
      as.integer(owners2) == 2 ~ 8,                                                                           # 8. Small employers
      as.integer(owners2) == 3 ~ 9                                                                            # 9. Capitalists
    ),
    wrightclass2_reduced = factor(
      wrightclass2_reduced,
      levels = 1:9,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Small employers",
        "9. Capitalists"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_reduced = "Wright Class Typology Reduced + Informal (6)")

frq(data_arg$wrightclass2_reduced)

# # base survey
# data_arg_svy <- as_survey_design(data_arg, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_6 <- data_arg_svy %>%
#   group_by(wrightclass2_reduced) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_6 %>%
#   print(n = Inf)
```

### wrightclass1_reduced2

```{r}
data_arg <- data_arg %>%
  mutate(
    wrightclass1_reduced2 = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 1,  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 2,  # 2. Informal workers
      as.integer(owners) == 1 & educ <= 8 ~ 3,                                                         # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                              # 4. Experts
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                   # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                   # 6. Managers
      as.integer(owners) == 1 & educ >= 9 ~ 7,                                                         # 7. Petty bourgeoisie
      as.integer(owners) %in% c(2, 3) ~ 8                                                              # 8. Employers
    ),
    wrightclass1_reduced2 = factor(
      wrightclass1_reduced2,
      levels = 1:8,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",       
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Employers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_reduced2 = "Wright Class Typology  Reduced (7)")

frq(data_arg$wrightclass1_reduced2)

# # base survey
# data_svy <- as_survey_design(data, weights = rake_wb2)
# 
# # Tabla de frecuencias ponderadas
# wright_freq_7 <- data_svy %>%
#   group_by(wrightclass1_reduced2) %>%
#   summarise(
#     freq = survey_mean(vartype = NULL, na.rm = TRUE),
#     n_unweighted = unweighted(n())
#   ) %>%
#   mutate(
#     freq_pct = freq * 100
#   )
# 
# wright_freq_7 %>%
#   print(n = Inf)
```

## Dependent variables

### c01_01

```{r}
frq(data_arg$c01_01)

data_arg <- data_arg %>%
  mutate(
    c01_01 = case_when(
      c01_01 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_01)
    )
  ) %>% 
  set_variable_labels(c01_01 = "Importance of unions: in achieving better wages (c01_01)")

frq(data_arg$c01_01)
```

### c01_02

```{r}
frq(data_arg$c01_02)

data_arg <- data_arg %>%
  mutate(
    c01_02 = case_when(
      c01_02 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_02)
    )
  ) %>% 
  set_variable_labels(c01_02 = "Importance of unions: in reducing inequality (c01_02)")

frq(data_arg$c01_02)
```

### c01_03

```{r}
frq(data_arg$c01_03)

data_arg <- data_arg %>%
  mutate(
    c01_03 = case_when(
      c01_03 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_03)
    )
  ) %>% 
  set_variable_labels(c01_03 = "Importance of unions: in protecting women workers' rights (c01_03)")

frq(data_arg$c01_03)
```

### c01_04

```{r}
frq(data_arg$c01_04)

data_arg <- data_arg %>%
  mutate(
    c01_04 = case_when(
      c01_04 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_04)
    )
  ) %>% 
  set_variable_labels(c01_04 = "Importance of unions: in protecting informal workers' rights (c01_04)")

frq(data_arg$c01_04)
```

### c01_05

```{r}
frq(data_arg$c01_05)

data_arg <- data_arg %>%
  mutate(
    c01_05 = case_when(
      c01_05 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_05)
    )
  ) %>% 
  set_variable_labels(c01_05 = "Importance of unions: in helping work-family balance (c01_05)")

frq(data_arg$c01_05)
```

### c01_06

```{r}
frq(data_arg$c01_06)

data_arg <- data_arg %>%
  mutate(
    c01_06 = case_when(
      c01_06 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_06)
    )
  ) %>% 
  set_variable_labels(c01_06 = "Importance of unions: in helping the economy grow (c01_06)")

frq(data_arg$c01_06)
```

### c07_03_dummy

```{r}
frq(data_arg$c07_03)

data_arg <- data_arg %>%
  mutate(
    c07_03_dummy = case_when(
      c07_03 %in% c(4, 5) ~ 1,
      c07_03 %in% c(1, 2, 3, NA) ~ 0
    ))%>% 
  set_variable_labels(c07_03_dummy = "Level of agreement: Implement laws to give unions more bargaining power (1 = agree)") %>% 
  set_value_labels(c07_03_dummy = c(
    "Agree" = 1,
    "Disagree" = 0
  ))

frq(data_arg$c07_03_dummy)
```

### b29_dummy

```{r}
frq(data_arg$b29)

data_arg <- data_arg %>%
  mutate(
    b29_dummy = case_when(
      b29 %in% c(3, 4, 5) ~ 1,
      b29 %in% c(1, 2, 6, 7) ~ 0
    ))%>% 
  set_variable_labels(b29_dummy = "Possibility of joining a union (1 = yes)") %>% 
  set_value_labels(b29_dummy = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data_arg$b29_dummy)
```

### b29_dummy2

```{r}
data_arg <- data_arg %>%
  mutate(
    b29_dummy2 = case_when(
      b29 %in% c(4, 5) ~ 1,
      b29 %in% c(1, 2, 3, 6, 7) ~ 0
    ))%>% 
  set_variable_labels(b29_dummy2 = "Possibility of joining a union (1 = yes) (2)") %>% 
  set_value_labels(b29_dummy2 = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data_arg$b29_dummy2)
```

## Controls

### female

```{r}
frq(data_arg$sexo)

data_arg <- data_arg %>%
  mutate(
    female = case_when(
      sexo == 1 ~ 0,
      sexo == 2 ~ 1
    )
  ) %>% 
  set_variable_labels(female = "Gender (1 = female)") %>% 
  set_value_labels(female = c(
    "Female" = 1, 
    "Male" = 0
  ))

frq(data_arg$female)
```

### age

```{r}
descr(data_arg$edad)
frq(data_arg$edad)

data_arg <- data_arg %>%
  mutate(
    age = case_when(
      edad %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(edad)
    )
  ) %>% 
  set_variable_labels(age = "Age")

descr(data_arg$age)
```

### sector

```{r}
frq(data_arg$a07)

data_arg <- data_arg %>%
  mutate(
    sector=case_when(
      as.numeric(a07) %in% c(1, 2, 4, 5, 7) ~ 1,
      as.numeric(a07) %in% c(3, 6) ~ 0
    ))%>% 
  set_variable_labels(sector = "Sector (1 = private)") %>% 
  set_value_labels(sector = c(
    "Private" = 1,
    "Public" = 0
  ))

frq(data_arg$sector)
```

### rama

```{r,warning=FALSE,message=FALSE}
frq(data_arg$a25) # 19 + 46 NS/NR y 603 otro
# frq(data_arg$a25_esp_rec) # 603 válidos
# 
# data_arg$rama <- ifelse(
#   data_arg$a25 == 22,
#   data_arg$a25_esp_rec,  # Usar el valor de "a25_esp" si la categoría es 22
#   data_arg$a25)          # En los demás casos, mantener el valor original de "a25"

data_arg$rama <- data_arg$a25
frq(data_arg$rama)

data_arg <- data_arg %>% 
  mutate(
    rama = factor(
      case_when(
        rama==1~"A",
        rama==2|rama==3~"BC",
        rama==4|rama==5|rama==6~"DEF",
        rama==7|rama==8~"GI",
        rama==9~"H",
        rama==10|rama==11|rama==12|rama==13|rama==14~"JKLMN",
        rama==15~"O",
        rama==16|rama==17~"PQ",
        rama==18|rama==19|rama==20~"RSU",
        rama==21~"T"
        )
      )
    ) %>% 
  set_variable_labels(rama = "Rama")

frq(data_arg$rama)
```

### unions

```{r}
# frq(data_arg$b19)
# 
# # Sindicatos en empresas
# data_arg <- data_arg %>%
#   mutate(
#     unions=case_when(
#       as.numeric(relation_mop) %in% c(1, 2) ~ NA_real_,
#       as.numeric(relation_mop) == 3 & b19 == 1 ~ 1,
#       as.numeric(relation_mop) == 3 & b19 %in% c(2, -888, -999) ~ 0,
#       TRUE ~ NA_real_
#     )
#   ) %>% 
#   set_variable_labels(unions = "Unions in company (1 = yes)") %>%
#   set_value_labels(unions = c(
#     "Yes" = 1,
#     "No" = 0
#   ))
# 
# frq(data_arg$unions)
```

### union_member

```{r,warning=FALSE,message=FALSE}
frq(data_arg$b21)

# Afiliación sindical
data_arg <- data_arg %>%
  mutate(
    union_member = case_when(
      as.numeric(relation_mop) %in% c(1, 2) ~ 0,
      as.numeric(relation_mop) == 3 & b21 %in% c(1, 2) ~ 1,
      as.numeric(relation_mop) == 3 & b21 %in% c(3, 4, 5, NA) ~ 0,
      # unions == 0 ~ 0,
      TRUE ~ NA_real_
    )
  ) %>%
  set_variable_labels(union_member = "Union membership (1 = yes)") %>%
  set_value_labels(union_member = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data_arg$union_member)
```

### pol_id

```{r}
frq(data_arg$c08)

data_arg <- data_arg %>%
  mutate(
    pol_id = case_when(
      c08 %in% c(0, 1, 2, 3) ~ 1,
      c08 %in% c(4, 5, 6) ~ 2,
      c08 %in% c(7, 8, 9, 10) ~ 3,
      c08 %in% c(11, 12, 888) ~ 4,
      TRUE ~ NA_real_
    ),
    pol_id = factor(
      pol_id, 
      levels = 1:4, 
      labels = c(
        "Left", 
        "Center", 
        "Right", 
        "Not identified"
        ) 
      )
    ) %>%
  set_variable_labels(pol_id = "Political identification") 

frq(data_arg$pol_id)
```

## Guardar datos

```{r}
save(data_arg, file="output/data/datos-clases-arg.Rdata")
saveRDS(data_arg, file="output/data/datos-clases-arg.rds")
```

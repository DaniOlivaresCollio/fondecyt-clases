# Procesamiento Data Conclat Chile

## Preparación

```{r librerias, echo=FALSE, warning=FALSE, message=FALSE}
rm(list=ls())
options(scipen = 999)

library(pacman)
p_load(
  # generacion docs 
  flextable,         # tablas personalizadas para word
  kableExtra,        # mejorar tablas
  knitr,             # generar reportes reproducibles
  officer,           # crear/modifcar documentos word o ppt
  tinytex,           # instalación mínima de LaTeX para generar PDF
  
  # importacion datos 
  haven,             # impotar/exportar datos spss, stata, sas con etiquetas
  readr,             # lectura rápida de csv
  readxl,            # leer excel 
  
  # manipulacion 
  forcats,           # manipulación de factores
  labelled,          # trabajar con variables etiquetadas
  purrr,             # programación funcional para listas y data frames
  sjlabelled,        # manejar etiquetas 
  stringr,           # manipular texto
  sjmisc,            # limpieza y descripción de datos
  
  # visualización
  ggplot2,           # visualización basado en gramática de gráficos
  ggrepel,           # etiquetas en gráficos sin superposición
  gridExtra,         # combinar gráficos en uno solo
  sjPlot,            # visualizar resultados estadísticos
  
  # análisis
  psych,             # análisis general, psicométrico
  survey,            # diseño survey encuestas complejas
  srvyr,             # diseño survey con tidy
  tidyverse,
  
  # conexion web
  curl,              # conexiones http de bajo nivel: para solucionar el problema de la api del ine
  httr               # cliente http para API
  )
```

### Cargar datos

```{r datos, message=FALSE, warning=FALSE}
load("input/data/datos-conclat.Rdata")
data_raw <- data

data <- data %>%
  rename(
    ciuo08_clio = ciuo08,
    sexo = e01,
    edad = e02
  )
```

### Selección de Variables

```{r data,message=FALSE,warning=FALSE}
data_select <- data_raw %>% 
  select(id,
         rake_wb2,
         # Relación con los medios de producción
         a07,
         a25, a25_esp, a25_esp_rec,
         a26,
         a27,
         # Skills
         a02,a02_rec,a03,a03_rec,
         ciuo08_clio = ciuo08,
         e05,
         # Autoridad / orgnización
         a15,
         a16,
         a17_01,a17_02,a17_03,a17_04,a17_05,a17_06,
         # formalidad
         a06,                                                  # boleta
         a10,                                                  # inicio de actividades
         a18,                                                  # contrato de trabajo escrito firmado
         # Dependent variables
         c01_01, c01_02, c01_03, c01_04, c01_05, c01_06,       # importancia de sindicatos
         c07_03, 
         b29,
         # Controls
         sexo = e01,
         edad = e02,
         b19,                                                  # hay sindicato en empresa
         b21,                                                  # afiliacion sindical
         c08                                                   # political id
         )# %>% 
  #sjlabelled::set_na(.,na=c(-999,-888,-777))
```

## Procesamiento

### relation_mop

```{r}
# Situación empleo
data <- data %>%
  mutate(
    a07 = factor(
      as.numeric(a07),
      levels = 1:9,
      labels = c(
        "1. Patrón(a) o empleador(a)",
        "2. Trabajador(a) por cuenta propia",
        "3. Empleado(a) u obrero(a) del sector público (Gobierno Central o Municipal)",
        "4. Empleado(a) u obrero(a) de empresas públicas",
        "5. Empleado(a) u obrero(a) del sector privado",
        "6. Servicio doméstico puertas adentro",
        "7. Servicio doméstico puertas afuera",
        "8. FF.AA. y del Orden",
        "9. Familiar no remunerado"
      )
    )
  ) %>%
  set_variable_labels(a07 = "Employment situation (a07)")

frq(data$a07)

data <- data %>%
  mutate(
    relation_mop = case_when(
      as_numeric(a07) == 1 ~ 1,
      as_numeric(a07) == 2 ~ 2,
      as_numeric(a07) >= 3 ~ 3,
      TRUE ~ NA_real_
      ),
    relation_mop = factor(
      relation_mop,
      levels = 1:3,
      labels = c(
        "1. Employers",
        "2. Self-Employed",
        "3. Salaried"
      )
    )
  ) %>%
  set_variable_labels(relation_mop = "Relation with Means of Production")

frq(data$relation_mop)
```

### company_size

```{r}
frq(data$a26)

data <- data %>%
  mutate(
    company_size = case_when(
      a26 %in% c(1) ~ 1,
      a26 %in% c(2, 3) ~ 2,
      a26 %in% c(4, 5) ~ 3,
      a26 %in% c(6, 7) ~ 4,
      a26 %in% c(8, 9) ~ 5,
      TRUE ~ NA_real_
    ),
    company_size = factor(
      company_size, 
      levels = 1:5, 
      labels = c(
        "Solo",
        "2-9",
        "10-49",
        "50-199",
        "200 or more"),
      ordered = TRUE
    )
  ) %>%
  set_variable_labels(company_size = "Company Size")

frq(data$company_size)
```

### workplace_size

```{r}
frq(data$a27)

data <- data %>%
  mutate(
    workplace_size = case_when(
      a27 %in% c(1) ~ 1,
      a27 %in% c(2, 3) ~ 2,
      a27 %in% c(4, 5) ~ 3,
      a27 %in% c(6, 7) ~ 4,
      a27 %in% c(8, 9) ~ 5,
      TRUE ~ NA_real_
    ),
    workplace_size = factor(
      workplace_size, 
      levels = 1:5, 
      labels = c(
        "Solo",
        "2-9",
        "10-49",
        "50-199",
        "200 or more"),
      ordered = TRUE
    )
  ) %>%
  set_variable_labels(workplace_size = "Workplace Size")

frq(data$workplace_size)
```

### owners

-   1 == employers o self employed sin empleados
-   2 == employers o self employed con 2-9 empleados
-   3 == employers o self employed com \>= 10 empleados

```{r}
table(data$relation_mop,data$company_size)
table(data$relation_mop,data$workplace_size)

data <- data %>%
  mutate(
    owners = case_when(
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 2 | (is.na(company_size) & as.numeric(workplace_size) == 2)) ~ 2,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 3 | (is.na(company_size) & as.numeric(workplace_size) >= 3)) ~ 3,
      TRUE ~ NA_real_
    ),
    owners = factor(
      owners,
      levels = 1:3,
      labels = c(
        "1. Solo Self-Employed",
        "2. Small employers",
        "3. Employers"
      )
    )
  ) %>%
  set_variable_labels(owners = "Owners")

frq(data$owners)
```

### owners2

-   1 == employers o self employed sin empleados
-   2 == employers o self employed con 2-49 empleados
-   3 == employers o self employed com \>= 50 empleados

```{r}
data <- data %>%
  mutate(
    owners2 = case_when(
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) %in% 2:3 | (is.na(company_size) & as.numeric(workplace_size) %in% 2:3)) ~ 2,
      as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 4 | (is.na(company_size) & as.numeric(workplace_size) >= 4)) ~ 3,
      TRUE ~ NA_real_
    ),
    owners2 = factor(
      owners2,
      levels = 1:3,
      labels = c(
        "1. Solo Self-Employed",
        "2. Small employers",
        "3. Capitalists"
      )
    )
  ) %>%
  set_variable_labels(owners2 = "Owners 2")

frq(data$owners2)
```

### educ

```{r}
frq(data$e05)

data <- data %>%
  mutate(
    educ = ifelse(e05 %in% c(-999, -888), NA, e05)
  ) %>%
  set_variable_labels(educ = "Educational level")

frq(data$educ)
```

### ciuo08_clio_2d

```{r}
# Preparar variables necesarias

## Crear la glosa concatenada
data$glosa_ciuo08 <- paste(data$a02, data$a03, sep = " ")

## Crear isco a 2 dígitos
data <- data %>%
  mutate(
    ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2))
  ) %>%
  set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")

frq(data$ciuo08_clio_2d)
```

```{r}
# Revisar los NA

## Armar tabla filtrando a los NA
tabla_ciuo08_999 <- data %>%
  filter(as.numeric(ciuo08_clio_2d) < 1) %>%
  select(ciuo08_clio,
         ciuo08_clio_2d,
         glosa_ciuo08, 
         a03,
         supervisa = a16, 
         educ = e05, 
         rama = a25, 
         a25_esp, 
         rama_esp = a25_esp_rec)

## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_999)
read_docx() %>%
  body_add_flextable(value = tabla_ft) %>%
  print(target = "output/tabla_ciuo08_999.docx")

## Revisar NA con API del INE
## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict", 
                       encode = "json",
                       body =  list(text = tabla_ciuo08_999$glosa_ciuo08,
                                    classification = "ciuo",
                                    digits = 2))

## Extraer el contenido
ciuo08_ine_999 <- httr::content(request)

## Agregar como nueva columna a la base original
tabla_ciuo08_999$ciuo08_ine_999 <- unlist(ciuo08_ine_999$cod_final)

## Armar tabla filtrando a los NA con ciuo08 ine 999
tabla_ciuo08_999_ine <- tabla_ciuo08_999 %>%
  select(ciuo08_clio,
         ciuo08_clio_2d,
         ciuo08_ine_999,
         glosa_ciuo08, 
         a03,
         supervisa, 
         educ, 
         rama, 
         rama_esp)

## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_999_ine)
read_docx() %>%
  body_add_flextable(value = tabla_ft) %>%
  print(target = "output/tabla_ciuo08_999_ine.docx")
```

```{r}
# Recuperar algunos NA

## Recodificar ciuo08 de NA recuperados
data <- data %>%
  mutate(
    ciuo08_clio = case_when(
      ciuo08_clio == "-999" & a03 == "tejer" ~ "7318", # Artesanos de los tejidos, el cuero y materiales similares
      ciuo08_clio == "-999" & a03 == "mantención" ~ "3121",
      ciuo08_clio == "-999" & a03 == "aseo limpieza" ~ "9111",
      ciuo08_clio == "-999" & a03 == "casa" ~ "9111",
      ciuo08_clio == "-999" & a03 == "supervisar trabajos" ~ "3121",
      ciuo08_clio == "-999" & a03 == "maquina pesada" ~ "8332",
      ciuo08_clio == "-999" & a03 == "no responde" ~ "9111",
      ciuo08_clio == "-999" & a03 == "Independiente" ~ "5212",
      ciuo08_clio == "-999" & a03 == "estaba en la casa por permiso administrativo" ~ "9331",
      ciuo08_clio == "-999" & a03 == "no trabja por ahoravendedor" ~ "5211",
      ciuo08_clio == "-999" & a03 == "organizar y ordenar ropa" ~ "5242",
      ciuo08_clio == "-999" & a03 == "ordenar y organizar ropa" ~ "5242",
      ciuo08_clio == "-999" & a03 == "stripper" ~ "5249",
      TRUE ~ ciuo08_clio
    )
  )

## Volver a crear ciuo08 con 2 dígitos y pasar -999 a NA
data <- data %>%
  mutate(
    ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2)),
    ciuo08_clio_2d = ifelse(ciuo08_clio_2d==-9, NA,ciuo08_clio_2d)
  ) %>%
  set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")

frq(data$ciuo08_clio_2d)
```

```{r}
# Chequeo códigos no existentes ciuo clio = 36, 55

## Armar tabla
tabla_ciuo08_36_55 <- data %>%
  filter(as.numeric(ciuo08_clio_2d) %in% c(36, 55)) %>%
  select(ciuo08_clio,
         ciuo08_clio_2d,
         glosa_ciuo08,
         id,
         supervisa = a16, 
         educ = e05, 
         rama = a25, 
         rama_esp = a25_esp_rec)

## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_36_55)
read_docx() %>%
  body_add_flextable(value = tabla_ft) %>%
  print(target = "output/tabla_ciuo08_36_55.docx")

## Revisar 36 y 55 con API del INE
## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict", 
                       encode = "json",
                       body =  list(text = tabla_ciuo08_36_55$glosa_ciuo08,
                                    classification = "ciuo",
                                    digits = 2))

## Extraer el contenido
ciuo08_ine_36_55 <- httr::content(request)

## Agregar como nueva columna a la base original
tabla_ciuo08_36_55$ciuo08_ine_36_55 <- unlist(ciuo08_ine_36_55$cod_final)

## Armar tabla filtrando a los NA con ciuo08 ine 999
tabla_ciuo08_36_55_ine <- tabla_ciuo08_36_55 %>%
  select(ciuo08_clio,
         ciuo08_clio_2d,
         ciuo08_ine_36_55,
         glosa_ciuo08, 
         id,
         supervisa, 
         educ, 
         rama, 
         rama_esp)

## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_36_55_ine)
read_docx() %>%
  body_add_flextable(value = tabla_ft) %>%
  print(target = "output/tabla_ciuo08_36_55_ine.docx")
```

```{r}
# Recuperar algunos códigos no existentes

## Recodificar ciuo08 de 36 55 recuperados
data <- data %>%
  mutate(
    ciuo08_clio = case_when(
      ciuo08_clio == "5522" & id == "var_223" ~ "3343",
      ciuo08_clio == "5521" & id == "var_2536" ~ "7322",
      TRUE ~ ciuo08_clio
    )
  )

## Volver a crear ciuo08 con 2 dígitos
data <- data %>%
  mutate(
    ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2)),
    ciuo08_clio_2d = ifelse(ciuo08_clio_2d==-9, NA,ciuo08_clio_2d)
  ) %>%
  set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")

frq(data$ciuo08_clio_2d)
```

```{r}
# Chequeo COMPLETO de códigos ciuo08 con api INE

## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict", 
                       encode = "json",
                       body =  list(text = data$glosa_ciuo08,
                                    classification = "ciuo",
                                    digits = 2))

## Extraer el contenido
ciuo08_ine <- httr::content(request)

## Agregar como nueva columna a la base original
data$ciuo08_ine <- unlist(ciuo08_ine$cod_final)

## Volver NA en ciuo08_ine los NA de ciuo08_clio_2d
data <- data %>%
  mutate(
    ciuo08_ine = ifelse(is.na(ciuo08_clio_2d), NA, ciuo08_ine)
  )

## Buscar los códigos diferentes
diferente_ciuo <- data %>%
  filter(ciuo08_ine != ciuo08_clio_2d | (is.na(ciuo08_ine) != is.na(ciuo08_clio_2d))) %>%
  select(glosa_ciuo08, ciuo08_clio_2d, ciuo08_ine)

diferente_ciuo
```

### skills

-   Experts -\> ciuo08_2d == 11 a 34 con universitaria completa o más (educ \>= 9) ---\> experts

-   Skilled -\> ciuo08_2d == 11 a 34 con universitaria incompleta o menos (educ \< 9), y

-   Skilled -\> ciuo08_2d == 35,36,41:44,53, y

-   Skilled -\> ciuo08_2d == 51,54,61,62,71:75,81 con media completa o más (educ \>= 5).

-   Unskilled -\> ciuo08_2d == 51,54,61,62,71:75,81 con media incompleta o menos, y

-   Unskilled -\> ciuo08_2d == 52,63,82,83,90+

-   61 62 71:75 --\> skilled

-   51,54,81 --\> unskilled

```{r}
data <- data %>% 
  mutate(
    skills = case_when(
      ciuo08_ine <= 34 & educ >= 9 ~ 1,
      ciuo08_ine <= 34 & is.na(educ)~ 1,  
      
      ciuo08_ine <= 34 & educ < 9 ~ 2,
      ciuo08_ine %in% c(35, 36, 41:44, 53) ~ 2,
      ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ >= 5 ~ 2,
      ciuo08_ine %in% c(61, 62, 71:75) & is.na(educ) ~ 2,
      
      ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ <= 4 ~ 3,
      ciuo08_ine %in% c(52, 63, 82, 83, 91:99) ~ 3,
      ciuo08_ine %in% c(51, 54, 81) & is.na(educ) ~ 3     
    ),
    skills = factor(
      skills, 
      levels = 1:3,
      labels = c(
        "1. Experts",
        "2. Skilled",
        "3. Unskilled"
      )
    )
  ) %>%
  set_variable_labels(skills = "Skills")


frq(data$skills)
```

### formal_position_auth

```{r}
frq(data$a15)

data <- data %>%
  mutate(
    formal_position_auth = case_when(
      as.numeric(relation_mop) %in% c(1, 2) ~ NA_real_,
      TRUE ~ as.numeric(a15)
    ),
    formal_position_auth = factor(
      formal_position_auth,
      levels = 1:4,
      labels = c(
        "1. Senior manager or executive",
        "2. Middle manager (e.g., sector, office or branch head)",
        "3. Supervisor or foreperson",
        "4. Regular employee or worker (no supervisory role)"
      )
    )
  ) %>%
  set_variable_labels(formal_position_auth = "Formal position of authority (a15)")

frq(data$formal_position_auth)
```

### supervision

```{r}
frq(data$a16)

data <- data %>%
  mutate(
    supervision = case_when(
      a16 == 1 ~ 1,
      a16 %in% c(2, -888, -999) ~ 0,
      TRUE ~ NA_real_
    )
  ) %>%
  set_variable_labels(supervision = "Supervises other workers (a16)") %>% 
  set_value_labels(supervision = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$supervision)
```

### decisionmaking_typology

```{r}
frq(data$a17_01)
frq(data$a17_02)
frq(data$a17_03)
frq(data$a17_04)
frq(data$a17_05)
frq(data$a17_06)

data <- data %>%
  mutate(
    decisionmaking_typology = if_else(
      is.na(a17_01),
      NA_real_,
      rowSums(across(a17_01:a17_06, ~ case_when(
        .x == 1 ~ 3,
        .x == 2 ~ 2,
        .x == 3 ~ 1,
        .x %in% c(-888, -999) ~ 1,  
        TRUE ~ NA_real_
      )), na.rm = TRUE)
    ),
    decisionmaking_typology_mean = if_else(
      is.na(a17_01),
      NA_real_,
      rowMeans(across(a17_01:a17_06, ~ case_when(
        .x == 1 ~ 3,
        .x == 2 ~ 2,
        .x == 3 ~ 1,
        .x %in% c(-888, -999) ~ 1,
        TRUE ~ NA_real_
      )), na.rm = TRUE)
    )
  ) %>%
  set_variable_labels(
    decisionmaking_typology = "Decision-making typology (sum, inverted)",
    decisionmaking_typology_mean = "Decision-making typology (mean, inverted)"
  )

frq(data$decisionmaking_typology)
frq(data$decisionmaking_typology_mean)

# Crear variable con 3 categorías
data <- data %>%
  mutate(
    decisionmaking_typology_cat = case_when(
      decisionmaking_typology_mean == 1 ~ 1,
      decisionmaking_typology_mean > 1 & decisionmaking_typology_mean < 3 ~ 2,
      decisionmaking_typology_mean == 3 ~ 3
    ),
    decisionmaking_typology_cat = factor(
      decisionmaking_typology_cat,
      levels = 1:3
    )
  ) %>%
  set_variable_labels(
    decisionmaking_typology_cat = "Decision-making typology (recoded 3 categories)"
  )

frq(data$decisionmaking_typology_cat)
```

### managerial_location_typology

```{r}
data <- data %>%
  mutate(
    managerial_location_typology = case_when(
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 1,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 2,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 3,
      as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 4,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 5,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 6,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 7,
      as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 8,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 9,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 10,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 11,
      as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 12
    ),
    managerial_location_typology = factor(
      managerial_location_typology,
      levels = 1:12,
      labels = c(
        "1. Manager on all criteria",
        "2. Manager not in formal hierarchy",
        "3. Non-supervisory manager",
        "4. Non-supervisory decision-maker not in formal hierarchy",
        "5. Advisor-manager on all criteria",
        "6. Advisor not in hierarchy",
        "7. Non-supervisory advisor",
        "8. Non-supervisory advisor not in formal hierarchy",
        "9. Sanctioning / task supervisor in hierarchy",
        "10. Sanctioning / task supervisor not in hierarchy",
        "11. Not subordinates but in hierarchy",
        "12. Non-supervisor / non manager on all criteria"
      )
    ),
    organization_assets = case_when(
      as.integer(managerial_location_typology) %in% c(1, 2, 3, 5) ~ 1,
      as.integer(managerial_location_typology) %in% c(6, 7, 9, 10) ~ 2,
      as.integer(managerial_location_typology) %in% c(4, 8, 11, 12) ~ 3
    ),
    organization_assets = factor(
      organization_assets,
      levels = 1:3,
      labels = c(
        "1. Manager",
        "2. Supervisor",
        "3. Non-managerial worker"
      )
    )
  ) %>%
  set_variable_labels(
    managerial_location_typology = "Managerial Location Typology",
    organization_assets = "Organizational Assets"
  )

frq(data$managerial_location_typology)
frq(data$organization_assets)
```

### a06_boleta

```{r}
frq(data$a06)

data <- data %>% 
  mutate(
    a06_boleta = case_when(
      a06 %in% c(1, 2) ~ 1,
      a06 %in% c(3, -888, -999) ~ 0
    )) %>% 
  set_variable_labels(a06_boleta = "Entrega boleta (1 = yes)") %>% 
  set_value_labels(a06_boleta = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$a06_boleta)
```

### inicio_actividades

```{r}
frq(data$a10)
table(data$a10, data$relation_mop)
table(data$a10, data$owners)
table(data$a10, data$owners2)
```

### a18_contrato

```{r}
frq(data$a18)

data <- data %>% 
  mutate(
    a18_contrato = case_when(
      a18 == 1 ~ 1, 
      a18 %in% c(2, 3, 4, -999) ~ 0
    )
  ) %>% 
  set_variable_labels(a18_contrato = "Has a signed written employment contract (1 = yes)") %>% 
  set_value_labels(a18_contrato = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$a18_contrato)

```

```{r}
table(data$owners, data$educ)
```

## Classes

![](img/wright_classes.jpeg)

### wrightclass1_original

**employers: employers con 10 o más trabajadores**

```{r}
data <- data %>%
  mutate(
    wrightclass1_original = case_when(
      as.integer(owners) == 3 ~ 1,  # 1. Employers
      as.integer(owners) == 2 ~ 2,  # 2. Small employers
      as.integer(owners) == 1 ~ 3,  # 3. Petty bourgeoisie
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 4,  # 4. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 5,  # 5. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 6,  # 6. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 7,  # 7. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 8,  # 8. Skilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 2 ~ 9,  # 9. Skilled workers
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 3 ~ 12  # 12. Nonskilled workers
    ),
    wrightclass1_original = factor(
      wrightclass1_original,
      levels = 1:12,
      labels = c(
        "1. Employers",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Expert managers",
        "5. Expert supervisors",
        "6. Experts",
        "7. Skilled managers",
        "8. Skilled supervisors",
        "9. Skilled workers",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Nonskilled workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_original = "Wright Class Typology")

frq(data$wrightclass1_original)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq <- data_svy %>%
  group_by(wrightclass1_original) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq %>%
  print(n = Inf)
```

### wrightclass2_capitalists

**capitalists: employers 50 o más trabajadores**

```{r}
data <- data %>%
  mutate(
    wrightclass2_capitalists = case_when(
      as.integer(owners2) == 3 ~ 1,  # 1. Capitalists
      as.integer(owners2) == 2 ~ 2,  # 2. Small employers
      as.integer(owners2) == 1 ~ 3,  # 3. Petty bourgeoisie
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 4,  # 4. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 5,  # 5. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 6,  # 6. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 7,  # 7. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 8,  # 8. Skilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 2 ~ 9,  # 9. Skilled workers
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 3 ~ 12  # 12. Nonskilled workers
    ),
    wrightclass2_capitalists = factor(
      wrightclass2_capitalists,
      levels = 1:12,
      labels = c(
        "1. Capitalists",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Expert managers",
        "5. Expert supervisors",
        "6. Experts",
        "7. Skilled managers",
        "8. Skilled supervisors",
        "9. Skilled workers",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Nonskilled workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_capitalists = "Wright Class Typology (2)")

frq(data$wrightclass2_capitalists)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_2 <- data_svy %>%
  group_by(wrightclass2_capitalists) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_2 %>%
  print(n = Inf)
```

### wrightclass1_informal

```{r}
data <- data %>%
  mutate(
    wrightclass1_informal = case_when(
      as.integer(owners) == 3 ~ 1,  # 1. Employers
      as.integer(owners) == 2 ~ 2,  # 2. Small employers
      
      as.integer(owners) == 1 & a06_boleta == 1 ~ 3,   # 3. Petty bourgeoisie
      as.integer(owners) == 1 & a06_boleta == 0 ~ 4,   # 4. Informal self-employed
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 5,  # 5. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 6,  # 6. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 7,  # 7. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 8,  # 8. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 9,  # 9. skilled supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 12, # 12. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 13  # 13. Informal workers
    ),
    wrightclass1_informal = factor(
      wrightclass1_informal,
      levels = 1:13,
      labels = c(
        "1. Employers",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Informal self-employed",
        "5. Expert managers",
        "6. Expert supervisors",
        "7. Experts",
        "8. Skilled managers",
        "9. Skilled supervisors",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Formal workers",
        "13. Informal workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_informal = "Wright Class Typology + Informal (3)")

frq(data$wrightclass1_informal)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_3 <- data_svy %>%
  group_by(wrightclass1_informal) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_3 %>%
  print(n = Inf)
```

### wrightclass2_informal

```{r}
data <- data %>%
  mutate(
    wrightclass2_informal = case_when(
      as.integer(owners2) == 3 ~ 1,  # 1. Capitalists
      as.integer(owners2) == 2 ~ 2,  # 2. Small employers
      
      as.integer(owners2) == 1 & a06_boleta == 1 ~ 3,   # 3. Petty bourgeoisie
      as.integer(owners2) == 1 & a06_boleta == 0 ~ 4,   # 4. Informal self-employed
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 1 ~ 5,  # 5. Expert managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 1 ~ 6,  # 6. Expert supervisors
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 7,  # 7. Experts
      
      as.integer(organization_assets) == 1 & as.integer(skills) == 2 ~ 8,  # 8. Skilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 2 ~ 9,  # 9. skilled supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) == 3 ~ 10, # 10. Nonskilled managers
      as.integer(organization_assets) == 2 & as.integer(skills) == 3 ~ 11, # 11. Nonskilled supervisors
      
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 12, # 12. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 13  # 13. Informal workers
    ),
    wrightclass2_informal = factor(
      wrightclass2_informal,
      levels = 1:13,
      labels = c(
        "1. Capitalists",
        "2. Small employers",
        "3. Petty bourgeoisie",
        "4. Informal self-employed",
        "5. Expert managers",
        "6. Expert supervisors",
        "7. Experts",
        "8. Skilled managers",
        "9. Skilled supervisors",
        "10. Nonskilled managers",
        "11. Nonskilled supervisors",
        "12. Formal workers",
        "13. Informal workers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_informal = "Wright Class Typology + Informal (4)")

frq(data$wrightclass2_informal)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_4 <- data_svy %>%
  group_by(wrightclass2_informal) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_4 %>%
  print(n = Inf)
```

### wrightclass1_reduced

```{r}
data <- data %>%
  mutate(
    wrightclass1_reduced = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 1,  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 2,  # 2. Informal workers
      as.integer(owners) == 1 & a06_boleta == 0 ~ 3,                                                   # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                              # 4. Experts
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                   # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                   # 6. Managers
      as.integer(owners) == 1 & a06_boleta == 1 ~ 7,                                                   # 7. Petty bourgeoisie
      as.integer(owners) == 2 ~ 8,                                                                     # 8. Small employers
      as.integer(owners) == 3 ~ 9                                                                      # 9. Employers
    ),
    wrightclass1_reduced = factor(
      wrightclass1_reduced,
      levels = 1:9,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",       
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Small employers",
        "9. Employers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_reduced = "Wright Class Typology  Reduced (5)")

frq(data$wrightclass1_reduced)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_5 <- data_svy %>%
  group_by(wrightclass1_reduced) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_5 %>%
  print(n = Inf)
```

### wrightclass2_reduced

```{r}
data <- data %>%
  mutate(
    wrightclass2_reduced = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18 == 1 ~ 1,                  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18 %in% c(2, 3, 4, -999) ~ 2, # 2. Informal workers
      as.integer(owners2) == 1 & a06_boleta == 0 ~ 3,                                                         # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                                     # 4. Experts      
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                          # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                          # 6. Managers
      as.integer(owners2) == 1 & a06_boleta == 1 ~ 7,                                                         # 7. Petty bourgeoisie
      as.integer(owners2) == 2 ~ 8,                                                                           # 8. Small employers
      as.integer(owners2) == 3 ~ 9                                                                            # 9. Capitalists
    ),
    wrightclass2_reduced = factor(
      wrightclass2_reduced,
      levels = 1:9,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Small employers",
        "9. Capitalists"
      )
    )
  ) %>%
  set_variable_labels(wrightclass2_reduced = "Wright Class Typology Reduced + Informal (6)")

frq(data$wrightclass2_reduced)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_6 <- data_svy %>%
  group_by(wrightclass2_reduced) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_6 %>%
  print(n = Inf)
```

### wrightclass1_reduced2

```{r}
data <- data %>%
  mutate(
    wrightclass1_reduced2 = case_when(
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 1 ~ 1,  # 1. Formal workers
      as.integer(organization_assets) == 3 & as.integer(skills) %in% c(2, 3) & a18_contrato == 0 ~ 2,  # 2. Informal workers
      as.integer(owners) == 1 & a06_boleta == 0 ~ 3,                                                   # 3. Informal self-employed
      as.integer(organization_assets) == 3 & as.integer(skills) == 1 ~ 4,                              # 4. Experts
      as.integer(organization_assets) == 2 & as.integer(skills) %in% c(1, 2, 3) ~ 5,                   # 5. Supervisors
      as.integer(organization_assets) == 1 & as.integer(skills) %in% c(1, 2, 3) ~ 6,                   # 6. Managers
      as.integer(owners) == 1 & a06_boleta == 1 ~ 7,                                                   # 7. Petty bourgeoisie
      as.integer(owners) %in% c(2, 3) ~ 8                                                              # 8. Employers
    ),
    wrightclass1_reduced2 = factor(
      wrightclass1_reduced2,
      levels = 1:8,
      labels = c(
        "1. Formal workers",
        "2. Informal workers",
        "3. Informal self-employed",
        "4. Experts",       
        "5. Supervisors",
        "6. Managers",
        "7. Petty bourgeoisie",
        "8. Employers"
      )
    )
  ) %>%
  set_variable_labels(wrightclass1_reduced2 = "Wright Class Typology  Reduced (7)")

frq(data$wrightclass1_reduced2)

# base survey
data_svy <- as_survey_design(data, weights = rake_wb2)

# Tabla de frecuencias ponderadas
wright_freq_7 <- data_svy %>%
  group_by(wrightclass1_reduced2) %>%
  summarise(
    freq = survey_mean(vartype = NULL, na.rm = TRUE),
    n_unweighted = unweighted(n())
  ) %>%
  mutate(
    freq_pct = freq * 100
  )

wright_freq_7 %>%
  print(n = Inf)
```

## Dependent variables

### c01_01

```{r}
frq(data$c01_01)

data <- data %>%
  mutate(
    c01_01 = case_when(
      c01_01 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_01)
    )
  ) %>% 
  set_variable_labels(c01_01 = "Importance of unions: in achieving better wages (c01_01)")

frq(data$c01_01)
```

### c01_02

```{r}
frq(data$c01_02)

data <- data %>%
  mutate(
    c01_02 = case_when(
      c01_02 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_02)
    )
  ) %>% 
  set_variable_labels(c01_02 = "Importance of unions: in reducing inequality (c01_02)")

frq(data$c01_02)
```

### c01_03

```{r}
frq(data$c01_03)

data <- data %>%
  mutate(
    c01_03 = case_when(
      c01_03 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_03)
    )
  ) %>% 
  set_variable_labels(c01_03 = "Importance of unions: in protecting women workers' rights (c01_03)")

frq(data$c01_03)
```

### c01_04

```{r}
frq(data$c01_04)

data <- data %>%
  mutate(
    c01_04 = case_when(
      c01_04 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_04)
    )
  ) %>% 
  set_variable_labels(c01_04 = "Importance of unions: in protecting informal workers' rights (c01_04)")

frq(data$c01_04)
```

### c01_05

```{r}
frq(data$c01_05)

data <- data %>%
  mutate(
    c01_05 = case_when(
      c01_05 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_05)
    )
  ) %>% 
  set_variable_labels(c01_05 = "Importance of unions: in helping work-family balance (c01_05)")

frq(data$c01_05)
```

### c01_06

```{r}
frq(data$c01_06)

data <- data %>%
  mutate(
    c01_06 = case_when(
      c01_06 %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(c01_06)
    )
  ) %>% 
  set_variable_labels(c01_06 = "Importance of unions: in helping the economy grow (c01_06)")

frq(data$c01_06)
```

### c07_03_dummy

```{r}
frq(data$c07_03)

data <- data %>%
  mutate(
    c07_03_dummy = case_when(
      c07_03 %in% c(4, 5) ~ 1,
      c07_03 %in% c(1, 2, 3, -888, -999) ~ 0
    ))%>% 
  set_variable_labels(c07_03_dummy = "Level of agreement: Implement laws to give unions more bargaining power (1 = agree)") %>% 
  set_value_labels(c07_03_dummy = c(
    "Agree" = 1,
    "Disagree" = 0
  ))

frq(data$c07_03_dummy)
```

### b29_dummy

```{r}
frq(data$b29)

data <- data %>%
  mutate(
    b29_dummy = case_when(
      b29 %in% c(3, 4, 5) ~ 1,
      b29 %in% c(1, 2, -888, -999) ~ 0
    ))%>% 
  set_variable_labels(b29_dummy = "Possibility of joining a union (1 = yes)") %>% 
  set_value_labels(b29_dummy = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$b29_dummy)
```

### b29_dummy2

```{r}
data <- data %>%
  mutate(
    b29_dummy2 = case_when(
      b29 %in% c(4, 5) ~ 1,
      b29 %in% c(1, 2, 3, -888, -999) ~ 0
    ))%>% 
  set_variable_labels(b29_dummy2 = "Possibility of joining a union (1 = yes) (2)") %>% 
  set_value_labels(b29_dummy2 = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$b29_dummy2)
```

## Controls

### female

```{r}
frq(data$sexo)

data <- data %>%
  mutate(
    female = case_when(
      sexo == 1 ~ 0,
      sexo == 2 ~ 1
    )
  ) %>% 
  set_variable_labels(female = "Gender (1 = female)") %>% 
  set_value_labels(female = c(
    "Female" = 1, 
    "Male" = 0
  ))

frq(data$female)
```

### age

```{r}
descr(data$edad)

data <- data %>%
  mutate(
    age = case_when(
      edad %in% c(-888, -999) ~ NA_real_,
      TRUE ~ as.numeric(edad)
    )
  ) %>% 
  set_variable_labels(age = "Age")

descr(data$age)
```

### sector

```{r}
frq(data$a07)

data <- data %>%
  mutate(
    sector=case_when(
      as.numeric(a07) %in% c(1, 2, 5, 6, 7, 9) ~ 1,
      as.numeric(a07) %in% c(3, 4, 8) ~ 0
    ))%>% 
  set_variable_labels(sector = "Sector (1 = private)") %>% 
  set_value_labels(sector = c(
    "Private" = 1,
    "Public" = 0
  ))

frq(data$sector)
```

### rama

```{r,warning=FALSE,message=FALSE}
frq(data$a25) # 19 + 46 NS/NR y 603 otro
frq(data$a25_esp_rec) # 603 válidos

data$rama <- ifelse(data$a25 == 22,
                    data$a25_esp_rec,  # Usar el valor de "a25_esp" si la categoría es 22
                    data$a25)      # En los demás casos, mantener el valor original de "a25"

frq(data$rama)

data <- data %>% 
  mutate(
    rama = factor(
      case_when(
        rama==1~"A",
        rama==2|rama==3~"BC",
        rama==4|rama==5|rama==6~"DEF",
        rama==7|rama==8~"GI",
        rama==9~"H",
        rama==10|rama==11|rama==12|rama==13|rama==14~"JKLMN",
        rama==15~"O",
        rama==16|rama==17~"PQ",
        rama==18|rama==19|rama==20~"RSU",
        rama==21~"T"
        )
      )
    ) %>% 
  set_variable_labels(rama = "Rama")

frq(data$rama)
```

### unions

```{r}
frq(data$b19)

# Sindicatos en empresas
data <- data %>%
  mutate(
    unions=case_when(
      as.numeric(relation_mop) %in% c(1, 2) ~ NA_real_,
      as.numeric(relation_mop) == 3 & b19 == 1 ~ 1,
      as.numeric(relation_mop) == 3 & b19 %in% c(2, -888, -999) ~ 0,
      TRUE ~ NA_real_
    )
  ) %>% 
  set_variable_labels(unions = "Unions in company (1 = yes)") %>%
  set_value_labels(unions = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$unions)
```

### union_member

```{r,warning=FALSE,message=FALSE}
frq(data$b21)

# Afiliación sindical
data <- data %>%
  mutate(
    union_member = case_when(
      as.numeric(relation_mop) %in% c(1, 2) ~ 0,
      as.numeric(relation_mop) == 3 & b21 %in% c(1, 2) ~ 1,
      as.numeric(relation_mop) == 3 & b21 %in% c(3, -888, -999) ~ 0,
      unions == 0 ~ 0,
      TRUE ~ NA_real_
    )
  ) %>%
  set_variable_labels(union_member = "Union membership (1 = yes)") %>%
  set_value_labels(union_member = c(
    "Yes" = 1,
    "No" = 0
  ))

frq(data$union_member)
```

### pol_id

```{r}
frq(data$c08)

data <- data %>%
  mutate(
    pol_id = case_when(
      c08 %in% c(0, 1, 2, 3) ~ 1,
      c08 %in% c(4, 5, 6) ~ 2,
      c08 %in% c(7, 8, 9, 10) ~ 3,
      c08 %in% c(11, 12, -888, -999) ~ 4,
      TRUE ~ NA_real_
    ),
    pol_id = factor(
      pol_id, 
      levels = 1:4, 
      labels = c(
        "Left", 
        "Center", 
        "Right", 
        "Not identified"
        ) 
      )
    ) %>%
  set_variable_labels(pol_id = "Political identification") 

frq(data$pol_id)
```

## Guardar datos

```{r}
save(data, file="output/data/datos-clases.Rdata")
saveRDS(data, file="output/data/datos-clases.rds")
```

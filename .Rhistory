a10,                                                  # inicio de actividades
a18,                                                  # contrato de trabajo escrito firmado
# Dependent variables
c01_01, c01_02, c01_03, c01_04, c01_05, c01_06,       # importancia de sindicatos
c07_03,
b29,
# Controls
sexo = e01,
edad = e02,
b19,                                                  # hay sindicato en empresa
b21,                                                  # afiliacion sindical
c08                                                   # political id
)# %>%
#sjlabelled::set_na(.,na=c(-999,-888,-777))
# Situación empleo
data <- data %>%
mutate(
a07 = factor(
as.numeric(a07),
levels = 1:9,
labels = c(
"1. Patrón(a) o empleador(a)",
"2. Trabajador(a) por cuenta propia",
"3. Empleado(a) u obrero(a) del sector público (Gobierno Central o Municipal)",
"4. Empleado(a) u obrero(a) de empresas públicas",
"5. Empleado(a) u obrero(a) del sector privado",
"6. Servicio doméstico puertas adentro",
"7. Servicio doméstico puertas afuera",
"8. FF.AA. y del Orden",
"9. Familiar no remunerado"
)
)
) %>%
set_variable_labels(a07 = "Employment situation (a07)")
frq(data$a07)
data <- data %>%
mutate(
relation_mop = case_when(
as_numeric(a07) == 1 ~ 1,
as_numeric(a07) == 2 ~ 2,
as_numeric(a07) >= 3 ~ 3,
TRUE ~ NA_real_
),
relation_mop = factor(
relation_mop,
levels = 1:3,
labels = c(
"1. Employers",
"2. Self-Employed",
"3. Salaried"
)
)
) %>%
set_variable_labels(relation_mop = "Relation with Means of Production")
frq(data$relation_mop)
frq(data$a26)
data <- data %>%
mutate(
company_size = case_when(
a26 %in% c(1) ~ 1,
a26 %in% c(2, 3) ~ 2,
a26 %in% c(4, 5) ~ 3,
a26 %in% c(6, 7) ~ 4,
a26 %in% c(8, 9) ~ 5,
TRUE ~ NA_real_
),
company_size = factor(
company_size,
levels = 1:5,
labels = c(
"Solo",
"2-9",
"10-49",
"50-199",
"200 or more"),
ordered = TRUE
)
) %>%
set_variable_labels(company_size = "Company Size")
frq(data$company_size)
frq(data$a27)
data <- data %>%
mutate(
workplace_size = case_when(
a27 %in% c(1) ~ 1,
a27 %in% c(2, 3) ~ 2,
a27 %in% c(4, 5) ~ 3,
a27 %in% c(6, 7) ~ 4,
a27 %in% c(8, 9) ~ 5,
TRUE ~ NA_real_
),
workplace_size = factor(
workplace_size,
levels = 1:5,
labels = c(
"Solo",
"2-9",
"10-49",
"50-199",
"200 or more"),
ordered = TRUE
)
) %>%
set_variable_labels(workplace_size = "Workplace Size")
frq(data$workplace_size)
table(data$relation_mop,data$company_size)
table(data$relation_mop,data$workplace_size)
data <- data %>%
mutate(
owners = case_when(
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 2 | (is.na(company_size) & as.numeric(workplace_size) == 2)) ~ 2,
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 3 | (is.na(company_size) & as.numeric(workplace_size) >= 3)) ~ 3,
TRUE ~ NA_real_
),
owners = factor(
owners,
levels = 1:3,
labels = c(
"1. Solo Self-Employed",
"2. Small employers",
"3. Employers"
)
)
) %>%
set_variable_labels(owners = "Owners")
frq(data$owners)
data <- data %>%
mutate(
owners2 = case_when(
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) == 1 | (is.na(company_size) & as.numeric(workplace_size) == 1)) ~ 1,
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) %in% 2:3 | (is.na(company_size) & as.numeric(workplace_size) %in% 2:3)) ~ 2,
as.numeric(relation_mop) %in% 1:2 & (as.numeric(company_size) >= 4 | (is.na(company_size) & as.numeric(workplace_size) >= 4)) ~ 3,
TRUE ~ NA_real_
),
owners2 = factor(
owners2,
levels = 1:3,
labels = c(
"1. Solo Self-Employed",
"2. Small employers",
"3. Capitalists"
)
)
) %>%
set_variable_labels(owners2 = "Owners 2")
frq(data$owners2)
frq(data$e05)
data <- data %>%
mutate(
educ = ifelse(e05 %in% c(-999, -888), NA, e05)
) %>%
set_variable_labels(educ = "Educational level")
frq(data$educ)
# Preparar variables necesarias
## Crear la glosa concatenada
data$glosa_ciuo08 <- paste(data$a02, data$a03, sep = " ")
## Crear isco a 2 dígitos
data <- data %>%
mutate(
ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2))
) %>%
set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")
frq(data$ciuo08_clio_2d)
# Revisar los NA
## Armar tabla filtrando a los NA
tabla_ciuo08_999 <- data %>%
filter(as.numeric(ciuo08_clio_2d) < 1) %>%
select(ciuo08_clio,
ciuo08_clio_2d,
glosa_ciuo08,
a03,
supervisa = a16,
educ = e05,
rama = a25,
a25_esp,
rama_esp = a25_esp_rec)
## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_999)
read_docx() %>%
body_add_flextable(value = tabla_ft) %>%
print(target = "output/tabla_ciuo08_999.docx")
## Revisar NA con API del INE
## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict",
encode = "json",
body =  list(text = tabla_ciuo08_999$glosa_ciuo08,
classification = "ciuo",
digits = 2))
## Extraer el contenido
ciuo08_ine_999 <- httr::content(request)
## Agregar como nueva columna a la base original
tabla_ciuo08_999$ciuo08_ine_999 <- unlist(ciuo08_ine_999$cod_final)
## Armar tabla filtrando a los NA con ciuo08 ine 999
tabla_ciuo08_999_ine <- tabla_ciuo08_999 %>%
select(ciuo08_clio,
ciuo08_clio_2d,
ciuo08_ine_999,
glosa_ciuo08,
a03,
supervisa,
educ,
rama,
rama_esp)
## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_999_ine)
read_docx() %>%
body_add_flextable(value = tabla_ft) %>%
print(target = "output/tabla_ciuo08_999_ine.docx")
# Recuperar algunos NA
## Recodificar ciuo08 de NA recuperados
data <- data %>%
mutate(
ciuo08_clio = case_when(
ciuo08_clio == "-999" & a03 == "tejer" ~ "7318", # Artesanos de los tejidos, el cuero y materiales similares
ciuo08_clio == "-999" & a03 == "mantención" ~ "3121",
ciuo08_clio == "-999" & a03 == "aseo limpieza" ~ "9111",
ciuo08_clio == "-999" & a03 == "casa" ~ "9111",
ciuo08_clio == "-999" & a03 == "supervisar trabajos" ~ "3121",
ciuo08_clio == "-999" & a03 == "maquina pesada" ~ "8332",
ciuo08_clio == "-999" & a03 == "no responde" ~ "9111",
ciuo08_clio == "-999" & a03 == "Independiente" ~ "5212",
ciuo08_clio == "-999" & a03 == "estaba en la casa por permiso administrativo" ~ "9331",
ciuo08_clio == "-999" & a03 == "no trabja por ahoravendedor" ~ "5211",
ciuo08_clio == "-999" & a03 == "organizar y ordenar ropa" ~ "5242",
ciuo08_clio == "-999" & a03 == "ordenar y organizar ropa" ~ "5242",
ciuo08_clio == "-999" & a03 == "stripper" ~ "5249",
TRUE ~ ciuo08_clio
)
)
## Volver a crear ciuo08 con 2 dígitos y pasar -999 a NA
data <- data %>%
mutate(
ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2)),
ciuo08_clio_2d = ifelse(ciuo08_clio_2d==-9, NA,ciuo08_clio_2d)
) %>%
set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")
frq(data$ciuo08_clio_2d)
# Chequeo códigos no existentes ciuo clio = 36, 55
## Armar tabla
tabla_ciuo08_36_55 <- data %>%
filter(as.numeric(ciuo08_clio_2d) %in% c(36, 55)) %>%
select(ciuo08_clio,
ciuo08_clio_2d,
glosa_ciuo08,
id,
supervisa = a16,
educ = e05,
rama = a25,
rama_esp = a25_esp_rec)
## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_36_55)
read_docx() %>%
body_add_flextable(value = tabla_ft) %>%
print(target = "output/tabla_ciuo08_36_55.docx")
## Revisar 36 y 55 con API del INE
## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict",
encode = "json",
body =  list(text = tabla_ciuo08_36_55$glosa_ciuo08,
classification = "ciuo",
digits = 2))
## Extraer el contenido
ciuo08_ine_36_55 <- httr::content(request)
## Agregar como nueva columna a la base original
tabla_ciuo08_36_55$ciuo08_ine_36_55 <- unlist(ciuo08_ine_36_55$cod_final)
## Armar tabla filtrando a los NA con ciuo08 ine 999
tabla_ciuo08_36_55_ine <- tabla_ciuo08_36_55 %>%
select(ciuo08_clio,
ciuo08_clio_2d,
ciuo08_ine_36_55,
glosa_ciuo08,
id,
supervisa,
educ,
rama,
rama_esp)
## Pasar tabla a word
tabla_ft <- flextable(tabla_ciuo08_36_55_ine)
read_docx() %>%
body_add_flextable(value = tabla_ft) %>%
print(target = "output/tabla_ciuo08_36_55_ine.docx")
# Recuperar algunos códigos no existentes
## Recodificar ciuo08 de 36 55 recuperados
data <- data %>%
mutate(
ciuo08_clio = case_when(
ciuo08_clio == "5522" & id == "var_223" ~ "3343",
ciuo08_clio == "5521" & id == "var_2536" ~ "7322",
TRUE ~ ciuo08_clio
)
)
## Volver a crear ciuo08 con 2 dígitos
data <- data %>%
mutate(
ciuo08_clio_2d = as.numeric(substr(ciuo08_clio, 1, 2)),
ciuo08_clio_2d = ifelse(ciuo08_clio_2d==-9, NA,ciuo08_clio_2d)
) %>%
set_variable_labels(ciuo08_clio_2d = "ISCO-08: 2 digits")
frq(data$ciuo08_clio_2d)
# Chequeo COMPLETO de códigos ciuo08 con api INE
## Enviar la consulta al servidor
request <-  httr::POST("https://rapps.ine.cl:9292/predict",
encode = "json",
body =  list(text = data$glosa_ciuo08,
classification = "ciuo",
digits = 2))
## Extraer el contenido
ciuo08_ine <- httr::content(request)
## Agregar como nueva columna a la base original
data$ciuo08_ine <- unlist(ciuo08_ine$cod_final)
## Volver NA en ciuo08_ine los NA de ciuo08_clio_2d
data <- data %>%
mutate(
ciuo08_ine = ifelse(is.na(ciuo08_clio_2d), NA, ciuo08_ine)
)
## Buscar los códigos diferentes
diferente_ciuo <- data %>%
filter(ciuo08_ine != ciuo08_clio_2d | (is.na(ciuo08_ine) != is.na(ciuo08_clio_2d))) %>%
select(glosa_ciuo08, ciuo08_clio_2d, ciuo08_ine)
diferente_ciuo
data <- data %>%
mutate(
skills = case_when(
ciuo08_ine <= 34 & educ >= 9 ~ 1,
ciuo08_ine <= 34 & is.na(educ)~ 1,
ciuo08_ine <= 34 & educ < 9 ~ 2,
ciuo08_ine %in% c(35, 36, 41:44, 53) ~ 2,
ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ >= 5 ~ 2,
ciuo08_ine %in% c(61, 62, 71:75) & is.na(educ) ~ 2,
ciuo08_ine %in% c(51, 54, 61, 62, 71:75, 81) & educ <= 4 ~ 3,
ciuo08_ine %in% c(52, 63, 82, 83, 91:99) ~ 3,
ciuo08_ine %in% c(51, 54, 81) & is.na(educ) ~ 3
),
skills = factor(
skills,
levels = 1:3,
labels = c(
"1. Experts",
"2. Skilled",
"3. Unskilled"
)
)
) %>%
set_variable_labels(skills = "Skills")
frq(data$skills)
frq(data$a15)
data <- data %>%
mutate(
formal_position_auth = case_when(
as.numeric(relation_mop) %in% c(1, 2) ~ NA_real_,
TRUE ~ as.numeric(a15)
),
formal_position_auth = factor(
formal_position_auth,
levels = 1:4,
labels = c(
"1. Senior manager or executive",
"2. Middle manager (e.g., sector, office or branch head)",
"3. Supervisor or foreperson",
"4. Regular employee or worker (no supervisory role)"
)
)
) %>%
set_variable_labels(formal_position_auth = "Formal position of authority (a15)")
frq(data$formal_position_auth)
frq(data$a16)
data <- data %>%
mutate(
supervision = case_when(
a16 == 1 ~ 1,
a16 %in% c(2, -888, -999) ~ 0,
TRUE ~ NA_real_
)
) %>%
set_variable_labels(supervision = "Supervises other workers (a16)")
frq(data$supervision)
frq(data$a17_01)
frq(data$a17_02)
frq(data$a17_03)
frq(data$a17_04)
frq(data$a17_05)
frq(data$a17_06)
data <- data %>%
mutate(
decisionmaking_typology = if_else(
is.na(a17_01),
NA_real_,
rowSums(across(a17_01:a17_06, ~ case_when(
.x == 1 ~ 3,
.x == 2 ~ 2,
.x == 3 ~ 1,
.x %in% c(-888, -999) ~ 1,
TRUE ~ NA_real_
)), na.rm = TRUE)
),
decisionmaking_typology_mean = if_else(
is.na(a17_01),
NA_real_,
rowMeans(across(a17_01:a17_06, ~ case_when(
.x == 1 ~ 3,
.x == 2 ~ 2,
.x == 3 ~ 1,
.x %in% c(-888, -999) ~ 1,
TRUE ~ NA_real_
)), na.rm = TRUE)
)
) %>%
set_variable_labels(
decisionmaking_typology = "Decision-making typology (sum, inverted)",
decisionmaking_typology_mean = "Decision-making typology (mean, inverted)"
)
frq(data$decisionmaking_typology)
frq(data$decisionmaking_typology_mean)
# Crear variable con 3 categorías
data <- data %>%
mutate(
decisionmaking_typology_cat = case_when(
decisionmaking_typology_mean == 1 ~ 1,
decisionmaking_typology_mean > 1 & decisionmaking_typology_mean < 3 ~ 2,
decisionmaking_typology_mean == 3 ~ 3
),
decisionmaking_typology_cat = factor(
decisionmaking_typology_cat,
levels = 1:3
)
) %>%
set_variable_labels(
decisionmaking_typology_cat = "Decision-making typology (recoded 3 categories)"
)
frq(data$decisionmaking_typology_cat)
data <- data %>%
mutate(
managerial_location_typology = case_when(
as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 1,
as.integer(decisionmaking_typology_cat) == 3 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 2,
as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 3,
as.integer(decisionmaking_typology_cat) == 3 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 4,
as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 5,
as.integer(decisionmaking_typology_cat) == 2 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 6,
as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 7,
as.integer(decisionmaking_typology_cat) == 2 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 8,
as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) %in% 1:3 ~ 9,
as.integer(decisionmaking_typology_cat) == 1 & supervision == 1 & as.integer(formal_position_auth) == 4 ~ 10,
as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) %in% 1:3 ~ 11,
as.integer(decisionmaking_typology_cat) == 1 & supervision == 0 & as.integer(formal_position_auth) == 4 ~ 12
),
managerial_location_typology = factor(
managerial_location_typology,
levels = 1:12,
labels = c(
"1. Manager on all criteria",
"2. Manager not in formal hierarchy",
"3. Non-supervisory manager",
"4. Non-supervisory decision-maker not in formal hierarchy",
"5. Advisor-manager on all criteria",
"6. Advisor not in hierarchy",
"7. Non-supervisory advisor",
"8. Non-supervisory advisor not in formal hierarchy",
"9. Sanctioning / task supervisor in hierarchy",
"10. Sanctioning / task supervisor not in hierarchy",
"11. Not subordinates but in hierarchy",
"12. Non-supervisor / non manager on all criteria"
)
),
organization_assets = case_when(
as.integer(managerial_location_typology) %in% c(1, 2, 3, 5) ~ 1,
as.integer(managerial_location_typology) %in% c(6, 7, 9, 10) ~ 2,
as.integer(managerial_location_typology) %in% c(4, 8, 11, 12) ~ 3
),
organization_assets = factor(
organization_assets,
levels = 1:3,
labels = c(
"1. Manager",
"2. Supervisor",
"3. Non-managerial worker"
)
)
) %>%
set_variable_labels(
managerial_location_typology = "Managerial Location Typology",
organization_assets = "Organizational Assets"
)
frq(data$managerial_location_typology)
frq(data$organization_assets)
frq(data$a06)
data <- data %>%
mutate(
a06_boleta = case_when(
a06 %in% c(1, 2) ~ 1,
a06 %in% c(3, -888, -999) ~ 0
)) %>%
set_variable_labels(a06_boleta = "Entrega boleta (a06 dummy)")
frq(data$a06_boleta)
table(data$a06, data$relation_mop)
table(data$a06, data$owners)
table(data$a06, data$owners2)
frq(data$a18)
data <- data %>%
mutate(
a18_contrato = case_when(
a18 == 1 ~ 1,
a18 %in% c(2, 3, 4, -999) ~ 0
)
) %>%
set_variable_labels(a18_contrato = "Has a signed written employment contract (1 = yes)") %>%
set_value_labels(a18_contrato = c(
"Yes" = 1,
"No" = 0
))
frq(data$a18_contrato)
